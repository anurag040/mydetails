import { Injectable, NgZone } from '@angular/core';

@Injectable({ providedIn: 'root' })
export class ActivitySyncService {
  private channel = new BroadcastChannel('user-activity-sync');
  private idleTimeout: any;
  private readonly idleTimeMs = 20 * 60 * 1000; // 20 mins

  constructor(private zone: NgZone) {
    // Listen for activity from other tabs/apps
    this.channel.onmessage = (event) => {
      if (event.data === 'active') {
        this.resetIdleTimer(false); // false = don't re-broadcast
      }
    };
    this.resetIdleTimer(false);

    // Listen for activity in this app
    ['mousemove', 'keydown', 'click', 'touchstart'].forEach(evt =>
      window.addEventListener(evt, () => this.resetIdleTimer(true))
    );
  }

  resetIdleTimer(broadcast = true) {
    // Called on activity (local or from BroadcastChannel)
    if (this.idleTimeout) clearTimeout(this.idleTimeout);

    if (broadcast) {
      // Tell other tabs/apps that user is active here
      this.channel.postMessage('active');
    }

    // Reset local idle timer
    this.idleTimeout = setTimeout(() => {
      this.handleIdleTimeout();
    }, this.idleTimeMs);
  }

  private handleIdleTimeout() {
    // Time to log out user (show popup or auto-logout)
    // Call your logout logic here
    window.location.href = '/logout'; // or trigger your popup
  }
}
constructor(private activitySync: ActivitySyncService) {}
