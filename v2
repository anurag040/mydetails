<div class="video-uploader-container">
  <h2>Upload and Play Videos</h2>

  <div class="upload-section">
    <label for="video-upload" class="custom-upload-button">
      Choose Video
    </label>
    <input
      type="file"
      id="video-upload"
      accept="video/*"
      (change)="onVideoSelected($event)"
      hidden
    />
    <button
      class="upload-button"
      [disabled]="!selectedFile"
      (click)="uploadVideo()"
    >
      Upload
    </button>
  </div>

  <h3>Uploaded Videos</h3>
  <div class="video-thumbnails">
    <div class="video-thumbnail" *ngFor="let video of videoList" (click)="playVideo(video.blobUrl)">
      <div class="video-frame">
        <video [src]="video.blobUrl" class="thumbnail-preview" muted autoplay loop></video>
        <div class="play-button-overlay">
          <i class="fa fa-play-circle"></i>
        </div>
      </div>
      <p class="video-title">{{ video.name }}</p>
    </div>
  </div>

  <div *ngIf="playingVideo" class="video-player-container">
    <h3>Playing Video</h3>
    <video controls [src]="playingVideo" class="video-player"></video>
  </div>
</div>


.video-uploader-container {
  width: 80%;
  margin: 20px auto;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 8px;
  background-color: #f9f9f9;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  text-align: center;
}

h2, h3 {
  margin-bottom: 20px;
}

.upload-section {
  margin-bottom: 20px;
}

.custom-upload-button {
  padding: 10px 20px;
  color: white;
  background-color: #007bff;
  border-radius: 4px;
  cursor: pointer;
}

.upload-button {
  margin-left: 10px;
  padding: 10px 20px;
  color: white;
  background-color: #28a745;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.upload-button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.video-thumbnails {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
}

.video-thumbnail {
  width: 150px;
  text-align: center;
  cursor: pointer;
  position: relative;
}

.video-frame {
  position: relative;
  width: 100%;
  padding-top: 56.25%; /* Maintain 16:9 aspect ratio */
  background: #000;
  border: 5px solid #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
}

.thumbnail-preview {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 8px;
}

.play-button-overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 2.5rem;
  cursor: pointer;
  opacity: 0.8;
  transition: opacity 0.3s ease;
}

.play-button-overlay:hover {
  opacity: 1;
}

.video-title {
  margin-top: 10px;
  font-size: 0.9rem;
  font-weight: bold;
  color: #333;
}

.video-player-container {
  margin-top: 20px;
}

.video-player {
  width: 80%;
  height: auto;
  border: 1px solid #ccc;
  border-radius: 8px;
}
