import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-video-uploader',
  templateUrl: './video-uploader.component.html',
  styleUrls: ['./video-uploader.component.css']
})
export class VideoUploaderComponent implements OnInit {
  selectedFile: File | null = null;
  videoList: Array<{ name: string; blobUrl: string }> = [];
  playingVideo: string | null = null;

  ngOnInit(): void {
    // Load videos from local storage on component initialization
    const savedVideos = localStorage.getItem('videos');
    if (savedVideos) {
      this.videoList = JSON.parse(savedVideos);
    }
  }

  onVideoSelected(event: any): void {
    this.selectedFile = event.target.files[0];
  }

  uploadVideo(): void {
    if (this.selectedFile) {
      const reader = new FileReader();

      reader.onload = (e: any) => {
        // Create a video object with a blob URL
        const videoBlobUrl = e.target.result;
        const videoData = {
          name: this.selectedFile!.name,
          blobUrl: videoBlobUrl
        };

        // Add the video to the list
        this.videoList.push(videoData);

        // Save the updated list to local storage
        localStorage.setItem('videos', JSON.stringify(this.videoList));

        // Clear the selected file
        this.selectedFile = null;
      };

      reader.readAsDataURL(this.selectedFile);
    }
  }

  playVideo(blobUrl: string): void {
    this.playingVideo = blobUrl;
  }
}

<div class="video-uploader-container">
  <h2>Upload and Play Videos</h2>

  <div class="upload-section">
    <label for="video-upload" class="custom-upload-button">
      Choose Video
    </label>
    <input
      type="file"
      id="video-upload"
      accept="video/*"
      (change)="onVideoSelected($event)"
      hidden
    />
    <button
      class="upload-button"
      [disabled]="!selectedFile"
      (click)="uploadVideo()"
    >
      Upload
    </button>
  </div>

  <h3>Uploaded Videos</h3>
  <div class="video-thumbnails">
    <div
      *ngFor="let video of videoList"
      class="video-thumbnail"
      (click)="playVideo(video.blobUrl)"
    >
      <video
        [src]="video.blobUrl"
        class="thumbnail-preview"
        muted
        autoplay
        loop
      ></video>
      <p>{{ video.name }}</p>
    </div>
  </div>

  <div *ngIf="playingVideo" class="video-player-container">
    <h3>Playing Video</h3>
    <video controls [src]="playingVideo" class="video-player"></video>
  </div>
</div>


.video-uploader-container {
  width: 80%;
  margin: 20px auto;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 8px;
  background-color: #f9f9f9;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  text-align: center;
}

h2, h3 {
  margin-bottom: 20px;
}

.upload-section {
  margin-bottom: 20px;
}

.custom-upload-button {
  padding: 10px 20px;
  color: white;
  background-color: #007bff;
  border-radius: 4px;
  cursor: pointer;
}

.upload-button {
  margin-left: 10px;
  padding: 10px 20px;
  color: white;
  background-color: #28a745;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.upload-button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.video-thumbnails {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: center;
}

.video-thumbnail {
  width: 150px;
  cursor: pointer;
  text-align: center;
}

.thumbnail-preview {
  width: 100%;
  height: 100px;
  object-fit: cover;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.video-player-container {
  margin-top: 20px;
}

.video-player {
  width: 80%;
  height: auto;
  border: 1px solid #ccc;
  border-radius: 8px;
}
