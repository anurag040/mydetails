import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-video-uploader',
  templateUrl: './video-uploader.component.html',
  styleUrls: ['./video-uploader.component.css']
})
export class VideoUploaderComponent implements OnInit {
  selectedFile: File | null = null;
  videoList: Array<{ name: string; path: string; isDefault: boolean }> = [];
  playingVideo: string | null = null;

  ngOnInit(): void {
    this.loadDefaultVideos();
    this.loadUploadedVideos();
  }

  onVideoSelected(event: any): void {
    this.selectedFile = event.target.files[0];
  }

  uploadVideo(): void {
    if (this.selectedFile) {
      const reader = new FileReader();

      reader.onload = (e: any) => {
        const videoBlobUrl = e.target.result;
        const videoData = {
          name: this.selectedFile!.name,
          path: videoBlobUrl,
          isDefault: false
        };

        // Save the uploaded video
        this.videoList.push(videoData);
        this.saveUploadedVideos();

        // Clear selected file
        this.selectedFile = null;
      };

      reader.readAsDataURL(this.selectedFile);
    }
  }

  playVideo(videoPath: string): void {
    this.playingVideo = videoPath;
  }

  private loadDefaultVideos(): void {
    // Reference videos from the assets/videos folder
    this.videoList = [
      { name: 'Default Video 1', path: 'assets/videos/video1.mp4', isDefault: true },
      { name: 'Default Video 2', path: 'assets/videos/video2.mp4', isDefault: true }
    ];
  }

  private loadUploadedVideos(): void {
    const savedVideos = localStorage.getItem('uploadedVideos');
    if (savedVideos) {
      const uploadedVideos = JSON.parse(savedVideos).map((video: any) => ({
        ...video,
        isDefault: false
      }));
      this.videoList = [...this.videoList, ...uploadedVideos];
    }
  }

  private saveUploadedVideos(): void {
    const uploadedVideos = this.videoList.filter(video => !video.isDefault);
    localStorage.setItem('uploadedVideos', JSON.stringify(uploadedVideos));
  }
}
